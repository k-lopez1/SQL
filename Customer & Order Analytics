#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#2. How many of those orders were for an iPhone? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID'

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#4. Which product was the cheapest one sold in January, and what was the price?
# THERE ARE MULTIPLE CORRECT ANSWERS LISTED BELOW 

###### QUESTION 4 ANSWER #1 ######
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE  price in (SELECT min(price) FROM BIT_DB.JanSales)

####### QUESTION 4 ANSWER #2 ######
SELECT distinct product, price 
FROM BIT_DB.JanSales 
ORDER BY price ASC LIMIT 1

####### QUESTION 4 ANSWER #3 ######
SELECT distinct product, MIN(price) 
FROM BIT_DB.JanSales Jan 
GROUP BY product, price 
ORDER BY price ASC LIMIT 1

#######  QUESTION 4 ANSWER #4 ######
SELECT product, min(price) 
FROM BIT_DB.JanSales Jan 
GROUP BY product, price 
ORDER BY price ASC
LIMIT 1

#5. What is the total revenue for each product sold in January?
SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
select 
sum(Quantity), 
product, 
sum(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
select 
count(distinct cust.acctnum), 
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID'

#8 List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales 
WHERE location like '%Los Angeles%'
GROUP BY Product

#9 Select the order dates from FebSales that fall in between 02/13/19 & 02/18/19.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'

#10 Select the location from FebSales that placed an order at 02/18/19 01:35?
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35'

#11 Select the quantity of orders from FebSales, where orderdate starts with 02/18/19, no matter what the time (HH:MM) is.
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%'

#12 Select the products and prices from FebSales, where the price includes '.99'.
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99'

#13 Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2

#14 How many of each type of headphone were sold in February?
SELECT sum(Quantity) as quantity,
Product
FROM BIT_DB.FebSales 
WHERE Product like '%Headphones%'
GROUP BY Product

#15 What was the average amount spent per account in February?
SELECT sum(quantity*price)/count(cust.acctnum) as avg_spent
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

# OR # 

SELECT avg(quantity*price)
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#16 Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, 
sum(quantity*price)
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) desc 
LIMIT 1
